function price(e){return{restrict:"A",require:"ngModel",replace:!0,link:function(r,o,s,a){a.$options=a.$options.createChild({updateOn:"default",updateOnDefault:!0,debounce:{default:0}});var i=function(r){var o=angular.isUndefined(r)?"":r.replace(/[^0-9]/g,"");return a.$setViewValue(o.length?e("number")(o):void 0),a.$render(),o};a.$parsers.push(i);var n=function(r){return angular.isUndefined(r)?void 0:e("number")(r)};a.$formatters.push(n)}}}angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/price/price.html",'<div class="form-group {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(),\'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" sf-changed="form" type="text" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-model="$$value$$" ng-disabled="form.readonly" price="form.price" options="{{form.options}}" name="{{form.key.slice(-1)[0]}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}\\" class="sr-only"><svg class="icon" ng-show="hasError()"><use xlink:href="public/admin/assets/icons/icons.svg#info_outline"></use></svg></span><div class="help-block" ng-show="hasError()" sf-message="form.description"></div></div>')}]),angular.module("schemaForm").directive("price",["$filter",price]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,r,o){var s=function(r,s,a){if("string"===s.type&&"price"===s.format){var i=e.stdFormObj(r,s,a);return i.key=a.path,i.type="price",a.lookup[o.stringify(a.path)]=i,i}};e.defaults.string.unshift(s),r.addMapping("bootstrapDecorator","price","directives/decorators/bootstrap/price/price.html"),r.createDirective("price","directives/decorators/bootstrap/price/price.html")}]);